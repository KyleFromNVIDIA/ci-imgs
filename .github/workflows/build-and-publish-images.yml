name: build and publish imgs workflow

on:
  workflow_call:
    inputs:
      # repo and branch
      repo:
        type: string
      branch:
        type: string
      date:
        type: string
      sha:
        type: string
      build_type:
        required: true
        type: string

      push:
        required: true
        type: boolean

defaults:
  run:
    shell: bash

permissions:
  actions: none
  checks: none
  contents: read
  deployments: none
  discussions: none
  id-token: write
  issues: none
  packages: read
  pages: none
  pull-requests: read
  repository-projects: none
  security-events: none
  statuses: none

jobs:
  compute-matrix:
    runs-on: ubuntu-latest
    outputs:
      LATEST_LINUX_VER: ${{ steps.latest-values.outputs.LATEST_LINUX_VER }}
      LATEST_CUDA_VER: ${{ steps.latest-values.outputs.LATEST_CUDA_VER }}
      LATEST_PYTHON_VER: ${{ steps.latest-values.outputs.LATEST_PYTHON_VER }}
      MATRIX: ${{ steps.compute-matrix.outputs.MATRIX }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Compute latest values
        id: latest-values
        run: ./ci/compute-latest-versions.sh
      - name: Compute matrix
        id: compute-matrix
        run: ./ci/compute-matrix.sh
  docker-build-per-arch:
    needs: compute-matrix
    strategy:
      matrix: ${{ fromJSON(needs.compute-matrix.outputs.MATRIX) }}
    runs-on: ${{ fromJSON(matrix.runner_arch != 'arm64' && '"ubuntu-latest"' || '{"labels":["self-hosted", "linux", "arm64", "cpu4"]}') }}
    env:
      RAPIDS_BUILD_TYPE: ${{ inputs.build_type }}
    steps:
      - name: Get AWS credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          role-to-assume: ${{ vars.AWS_ROLE_ARN }}
          aws-region: ${{ vars.AWS_REGION }}
          role-duration-seconds: 43200 # 12h
      - name: Checkout
        uses: actions/checkout@v3
      - name: Standardize repository information
        uses: rapidsai/shared-action-workflows/rapids-github-info@branch-23.04
        with:
          repo: ${{ inputs.repo }}
          branch: ${{ inputs.branch }}
          date: ${{ inputs.date }}
          sha: ${{ inputs.sha }}
      - name: Set up Docker Context for Buildx
        id: buildx-context
        run: docker context create builders
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          endpoint: builders
      - name: Download and untar gha-tools
        run: |
          set -x
          sudo apt-get update -y && sudo apt-get install -y awscli git
          git clone https://github.com/sevagh/gha-tools -b feat/docker-s3 ./gha-tools
          chmod +x ./gha-tools/tools/*
          sudo cp ./gha-tools/tools/* /usr/bin/
      - name: Compute Tag Argument
        id: compute-tag-arg
        run: |
          set -x
          TAG="rapidsai/ci:cuda${{ matrix.CUDA_VER }}-${{ matrix.LINUX_VER }}-py${{ matrix.PYTHON_VER }}-$(uname -m)"
          TAG_ARG="-t ${TAG}"
          echo "TAG=${TAG}" >> ${GITHUB_OUTPUT}
          echo "TAG_ARG=${TAG_ARG}" >> ${GITHUB_OUTPUT}
      - name: Build and push intermediate image to s3
        run: |
          docker build --pull -f Dockerfile ./context --build-arg CUDA_VER=${{ matrix.CUDA_VER }} --build-arg LINUX_VER=${{ matrix.LINUX_VER }} --build-arg PYTHON_VER=${{ matrix.PYTHON_VER }} ${{ steps.compute-tag-arg.outputs.TAG_ARG }}
          rapids-upload-docker-to-s3 ${{ steps.compute-tag-arg.outputs.TAG }}
  docker-assemble-push-multiarch:
    needs: [compute-matrix, docker-build-per-arch]
    runs-on: ubuntu-latest
    env:
      DOCKERHUB_USERNAME: ${{ secrets.GPUCIBOT_DOCKERHUB_USER }}
      DOCKERHUB_TOKEN: ${{ secrets.GPUCIBOT_DOCKERHUB_TOKEN }}
      RAPIDS_BUILD_TYPE: ${{ inputs.build_type }}
    steps:
      - name: Get AWS credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          role-to-assume: ${{ vars.AWS_ROLE_ARN }}
          aws-region: ${{ vars.AWS_REGION }}
          role-duration-seconds: 43200 # 12h
      - name: Checkout
        uses: actions/checkout@v3
      - name: Standardize repository information
        uses: rapidsai/shared-action-workflows/rapids-github-info@branch-23.04
        with:
          repo: ${{ inputs.repo }}
          branch: ${{ inputs.branch }}
          date: ${{ inputs.date }}
          sha: ${{ inputs.sha }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - if: ${{ env.DOCKERHUB_USERNAME != '' && env.DOCKERHUB_TOKEN != '' }}
        name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_TOKEN }}
      - name: Download and untar gha-tools
        run: |
          set -x
          sudo apt-get update -y && sudo apt-get install -y awscli git
          git clone https://github.com/sevagh/gha-tools -b feat/docker-s3 ./gha-tools
          chmod +x ./gha-tools/tools/*
          sudo cp ./gha-tools/tools/* /usr/bin/
      - name: Compute latest tag
        id: compute-latest-tag
        run: |
          set -x
          LATEST_TAG="rapidsai/ci:cuda${{ needs.compute-matrix.outputs.LATEST_CUDA_VER }}-${{ needs.compute-matrix.outputs.LATEST_LINUX_VER }}-py${{ needs.compute-matrix.outputs.LATEST_PYTHON_VER }}"
          echo "LATEST_TAG=${LATEST_TAG}" >> ${GITHUB_OUTPUT}
      - name: Download all images from s3 and assemble multiarch
        run: |
          # pass latest tag and latest tag alias as arguments
          # the image that matches LATEST_TAG will be given the latest alias
          set -x
          rapids-docker-multiarch-from-s3 "${{ steps.compute-latest-tag.outputs.LATEST_TAG }}" "rapidsai/ci:latest"
